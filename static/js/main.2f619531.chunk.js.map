{"version":3,"sources":["Component/Catalog/Catalog-card/Catalog-card.module.css","Component/Catalog/Catalog.module.css","Component/Navigation/Navigation.module.css","Component/Navigation/Navigation.js","Component/Catalog/Catalog-card/Catalog-card.js","Component/Catalog/Catalog.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","navigation","props","catalogItems","catalog","data","locations","map","location","branches","length","Submenu","branch","Item","onClick","showCategories","dealerId","dealers_id","branchId","branch_id","name","Navbar","className","navstyle","navcolor","Brand","href","brandColor","Toggle","Collapse","Text","title","catalogCard","image","undefined","category","console","log","imgsrc","process","cardstyle","card","src","alt","style","width","container","btnstyle","showSubCategories","categoryCards","categoryName","selectedCategory","categories","Breadcrumbs","aria-label","catStyle","brd_crm_color","Link","color","brd_crm_link","catalogFilter","Typography","ctlg_wndw","App","state","showWelcome","catalogData","filteredCategories","filter","flat","setState","subcategories","subCategories","welcomeMessage","catalogPreviewList","this","Catalog","Navigation","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"s/iCACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,UAAY,gCAAgC,SAAW,iC,mBCA3GD,EAAOC,QAAU,CAAC,cAAgB,+BAA+B,aAAe,8BAA8B,UAAY,6B,mBCA1HD,EAAOC,QAAU,CAAC,SAAW,6BAA6B,WAAa,iC,qOCsCxDC,EAlCI,SAACC,GAEhB,IAAIC,EAAeC,EAAQC,KAAKC,UAAUC,KAAI,SAAAC,GAC1C,IAAIC,EAAW,KAMf,OAJiC,IAA7BD,EAASC,SAASC,SAClBD,EAAW,cAAC,IAASE,QAAV,UAAmBH,EAASC,SAASF,KAAI,SAAAK,GAAM,OAAI,cAAC,IAASC,KAAV,CAAeC,QAAS,kBAAMZ,EAAMa,eAAe,CAAEC,SAAUR,EAASS,WAAYC,SAAUN,EAAOO,aAArG,SAAoHP,EAAOQ,aAIzL,eAAC,IAASP,KAAV,WACKL,EAASY,KACTX,QAKb,OACI,8BACI,eAACY,EAAA,EAAD,CAAQC,UAAaC,IAASC,SAA9B,UACI,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,qBAAqBJ,UAAaC,IAASI,WAA9D,sCACA,cAACN,EAAA,EAAOO,OAAR,IACA,cAACP,EAAA,EAAOQ,SAAR,CAAiBP,UAAU,sBAA3B,SACI,cAACD,EAAA,EAAOS,KAAR,UACI,cAAC,IAAD,CAAUC,MAAM,kBAAhB,SACK5B,c,iBCVd6B,EAlBK,SAAC9B,GAEjB,IAAI+B,OAAiCC,IAAzBhC,EAAMiC,SAASF,MAAsB/B,EAAMiC,SAASF,MAAQ,kBACxEG,QAAQC,IAAIJ,GACZ,IAAIK,EAAM,UAAMC,qBAAN,mBAAuCN,GAEjD,OACI,8BACI,sBAAKX,UAAWkB,IAAUC,KAA1B,UACI,qBAAKC,IAAKJ,EAAQK,IAAI,SAASC,MAAO,CAAEC,MAAO,UAC/C,qBAAKvB,UAAWkB,IAAUM,UAA1B,SACI,yBAAQxB,UAAYkB,IAAUO,SAAUjC,QAAS,kBAAMZ,EAAM8C,kBAAkB9C,EAAMiC,WAArF,cAAkGjC,EAAMiC,SAASf,gB,yCCmBtHhB,EA1BC,SAACF,GAEb,IAAI+C,EAAgB,KAEhBC,EAAe,KASnB,OAR+B,OAA3BhD,EAAMiD,mBACND,EAAehD,EAAMiD,kBAGA,OAArBjD,EAAMkD,aACNH,EAAgB/C,EAAMkD,WAAW7C,KAAI,SAAA4B,GAAQ,OAAI,cAAC,EAAD,CAAaA,SAAUA,EAAUa,kBAAmB9C,EAAM8C,wBAI3G,gCACI,eAACK,EAAA,EAAD,CAAaC,aAAW,aAAahC,UAAWiC,IAASC,cAAzD,UACI,cAACC,EAAA,EAAD,CAAMC,MAAM,cAAcpC,UAAWiC,IAASI,aAAc7C,QAAS,kBAAMZ,EAAMa,eAAeb,EAAM0D,gBAAtG,+BAGA,cAACC,EAAA,EAAD,CAAYH,MAAM,cAAlB,SAAiCR,OAErC,qBAAK5B,UAAaiC,IAASO,UAA3B,SAAuCb,QC6BpCc,E,4MA/CbC,MAAQ,CACNC,aAAa,EACb3D,UAAW4D,EAAY7D,KAAKC,UAC5BsD,cAAe,KACfR,WAAY,KACZD,iBAAkB,M,EA0BpBpC,eAAiB,SAAC6C,GAChB,IAAIO,EAAqB,EAAKH,MAAM1D,UACjC8D,QAAO,SAAA5D,GAAQ,OAAIA,EAASS,aAAe2C,EAAc5C,YACzDT,KAAI,SAAAC,GAAQ,OAAIA,EAASC,SAAS2D,QAAO,SAAAxD,GAAM,OAAIA,EAAOO,YAAcyC,EAAc1C,YACpFX,KAAI,SAAAK,GAAM,OAAIA,EAAOwC,iBAAaiB,KAAK,GAC5C,EAAKC,SAAS,CAAEL,aAAa,EAAOL,cAAeA,EAAeR,WAAYe,EAAoBhB,iBAAkB,Q,EAGtHH,kBAAoB,SAACb,GACnB,GAA+B,OAA3BA,EAASoC,oBAAqDrC,IAA3BC,EAASoC,cAA6B,CAC3E,IAAIC,EAAgBrC,EAASoC,cAC7B,EAAKD,SAAS,CAAElB,WAAYoB,EAAerB,iBAAkBhB,EAASf,S,uDAhCxE,IAAIqD,EAAiB,KAEjBC,EAAqB,KAUzB,OARIC,KAAKX,MAAMC,cACbQ,EAAiB,sBAAKnD,UAAU,UAAf,cAA0B,6CAAe,uBAAf,+BAA1B,IAA8E,2DAGnE,OAA1BqD,KAAKX,MAAMZ,aACbsB,EAAqB,cAACE,EAAD,CAAShB,cAAee,KAAKX,MAAMJ,cAAe7C,eAAgB4D,KAAK5D,eAAgBqC,WAAYuB,KAAKX,MAAMZ,WAAYD,iBAAkBwB,KAAKX,MAAMb,iBAAkBH,kBAAmB2B,KAAK3B,qBAItN,sBAAK1B,UAAU,MAAf,UACE,cAACuD,EAAD,CAAY9D,eAAgB4D,KAAK5D,iBAChC0D,EACAC,S,GA5BSI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2f619531.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Catalog-card_card__B2db9\",\"container\":\"Catalog-card_container__2giz_\",\"btnstyle\":\"Catalog-card_btnstyle__3EbxI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"brd_crm_color\":\"Catalog_brd_crm_color__2J39v\",\"brd_crm_link\":\"Catalog_brd_crm_link__39C9D\",\"ctlg_wndw\":\"Catalog_ctlg_wndw__14ZNG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navcolor\":\"Navigation_navcolor__2yaHq\",\"brandColor\":\"Navigation_brandColor__y436n\"};","import { Navbar } from 'react-bootstrap';\nimport Dropdown from 'react-multilevel-dropdown';\nimport catalog from './catalog.json';\nimport navstyle from './Navigation.module.css';\n\nconst navigation = (props) => {\n\n    let catalogItems = catalog.data.locations.map(location => {\n        let branches = null;\n\n        if (location.branches.length !== 0) {\n            branches = <Dropdown.Submenu>{location.branches.map(branch => <Dropdown.Item onClick={() => props.showCategories({ dealerId: location.dealers_id, branchId: branch.branch_id })}>{branch.name}</Dropdown.Item>)}</Dropdown.Submenu>\n        }\n\n        return (\n            <Dropdown.Item>\n                {location.name}\n                {branches}\n            </Dropdown.Item>\n        )\n    })\n\n    return (\n        <div>\n            <Navbar className = {navstyle.navcolor}>\n                <Navbar.Brand href=\"/rental-management\" className = {navstyle.brandColor}>Rental Management System</Navbar.Brand>\n                <Navbar.Toggle />\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Navbar.Text>\n                        <Dropdown title='Select location'>\n                            {catalogItems}\n                        </Dropdown>\n                    </Navbar.Text>\n                </Navbar.Collapse>\n            </Navbar>\n        </div>\n    )\n}\n\nexport default navigation","import cardstyle from './Catalog-card.module.css';\n\nconst catalogCard = (props) => {\n\n    let image = props.category.image !== undefined ? props.category.image : 'default_img.jpg';\n    console.log(image)\n    let imgsrc = `${process.env.PUBLIC_URL}/images/${image}`;\n\n    return (\n        <div>\n            <div className={cardstyle.card}>\n                <img src={imgsrc} alt=\"Avatar\" style={{ width: \"100%\" }}></img>\n                <div className={cardstyle.container}>\n                    <button className= {cardstyle.btnstyle} onClick={() => props.showSubCategories(props.category)}> {props.category.name}</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default catalogCard;","import CatalogCard from \"./Catalog-card/Catalog-card\"\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport catStyle from './Catalog.module.css';\n\nconst catalog = (props) => {\n\n    let categoryCards = null;\n\n    let categoryName = null;\n    if (props.selectedCategory !== null) {\n        categoryName = props.selectedCategory\n    }\n\n    if (props.categories !== null) {\n        categoryCards = props.categories.map(category => <CatalogCard category={category} showSubCategories={props.showSubCategories}></CatalogCard>)\n    }\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\" className={catStyle.brd_crm_color}>\n                <Link color=\"textPrimary\" className={catStyle.brd_crm_link} onClick={() => props.showCategories(props.catalogFilter)}>\n                    Equipment Catalog\n                </Link>\n                <Typography color=\"textPrimary\">{categoryName}</Typography>\n            </Breadcrumbs>\n            <div className = {catStyle.ctlg_wndw}>{categoryCards}</div>\n        </div>\n    )\n}\n\nexport default catalog;","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navigation from './Component/Navigation/Navigation';\nimport catalogData from './Component/Navigation/catalog.json';\nimport Catalog from './Component/Catalog/Catalog';\n\nclass App extends Component {\n\n  state = {\n    showWelcome: true,\n    locations: catalogData.data.locations,\n    catalogFilter: null,\n    categories: null,\n    selectedCategory: null\n  }\n\n  render() {\n\n    let welcomeMessage = null;\n\n    let catalogPreviewList = null;\n\n    if (this.state.showWelcome) {\n      welcomeMessage = <div className=\"Welcome\"> <h2>WELCOME TO <br /> RENTAL MANAGEMENT SYSTEM</h2> <p>Please select Location</p></div>\n    }\n\n    if (this.state.categories !== null) {\n      catalogPreviewList = <Catalog catalogFilter={this.state.catalogFilter} showCategories={this.showCategories} categories={this.state.categories} selectedCategory={this.state.selectedCategory} showSubCategories={this.showSubCategories}></Catalog>;\n    }\n\n    return (\n      <div className=\"App\">\n        <Navigation showCategories={this.showCategories}></Navigation>\n        {welcomeMessage}\n        {catalogPreviewList}\n      </div>\n    );\n  }\n\n  showCategories = (catalogFilter) => {\n    let filteredCategories = this.state.locations\n      .filter(location => location.dealers_id === catalogFilter.dealerId)\n      .map(location => location.branches.filter(branch => branch.branch_id === catalogFilter.branchId)\n        .map(branch => branch.categories)).flat(2)\n    this.setState({ showWelcome: false, catalogFilter: catalogFilter, categories: filteredCategories, selectedCategory: null })\n  }\n\n  showSubCategories = (category) => {\n    if (category.subcategories !== null && category.subcategories !== undefined) {\n      let subCategories = category.subcategories\n      this.setState({ categories: subCategories, selectedCategory: category.name })\n    }\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}